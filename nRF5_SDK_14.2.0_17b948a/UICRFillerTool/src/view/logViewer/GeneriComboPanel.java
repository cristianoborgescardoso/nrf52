/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.logViewer;

import java.awt.Component;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import uicrfillertool.Device;
import util.Config;
import xml.DeviceXml;
import xml.DeviceXmls;

/**
 *
 * @author Cristiano
 */
public class GeneriComboPanel extends javax.swing.JPanel implements LabelFillerConteiner
{

    private final String enable = "Enable";
    private final String disable = "Disable";
    private final String input = "Input";
    private final String output = "Output";
    /**
     * Creates new form TempLabelPanel
     */
    private final int title;
    private final int labelTextFontSize;
    private final int labelTitleFontSize;
    private LabelFiller labelFiller;
    private final LogViewer logViewer;
    private static final Map<Integer, Device> deviceMap = new HashMap<>();
    private static Device tempDevice;

    public GeneriComboPanel(LogViewer logViewer, int labelTextFontSize, int labelTitleFontSize, int title)
    {
        this.logViewer = logViewer;
        this.labelTextFontSize = labelTextFontSize;
        this.labelTitleFontSize = labelTitleFontSize;
        this.title = title;
        initFiller();
        initComponents();
        addComboBox();
//        setLayout(new SpringLayout());
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "P." + title, javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14)));
        cbEnable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]
        {
            disable, enable
        }));
        cbEnable.setSelectedItem(disable);
        setBackground(java.awt.Color.lightGray);
    }

    private void addComboBox()
    {

    }

    @Override
    public void addComponent(Component label)
    {
        add(label);
    }

    @Override
    public LogViewer getParentLogViewer()
    {
        return logViewer;
    }

    private void initFiller()
    {
        //labelFiller = new LabelFiller(this, labelTextFontSize, labelTitleFontSize);
    }

    public LabelFiller getLabelFiller()
    {
        return labelFiller;
    }

    public int getTitle()
    {
        return title;
    }

    private void setNextOthersComboBoxEnable(boolean shouldBeEnable)
    {
        cbInput.setEnabled(shouldBeEnable);
        cbName.setEnabled(shouldBeEnable);
        if (shouldBeEnable)
        {
            setBackground(new java.awt.Color(51, 204, 0));
        }
        else
        {
            setBackground(java.awt.Color.lightGray);
        }
    }

    private void updateDevice(boolean keepOnHashMap)
    {
        if (keepOnHashMap)
        {
            tempDevice = deviceMap.get(this.title);
            if (tempDevice == null)
            {
                deviceMap.put(this.title, new Device(((DeviceXml)cbName.getSelectedItem()).getId(), this.title, cbInput.getSelectedIndex()));//cbInput: 0 = input; 1 = output
            }
            else
            {
                tempDevice.setDeviceName(((DeviceXml)cbName.getSelectedItem()).getId());
                tempDevice.setPinFunction(cbInput.getSelectedIndex());
            }
        }
        else
        {
            deviceMap.remove(this.title);
        }
    }

    public static List<Device> getDeviceList()
    {
        return new ArrayList<>(deviceMap.values());
    }

    private void updateCbNames()
    {
        if (String.valueOf(cbInput.getSelectedItem()).equalsIgnoreCase(input))
        {
            cbName.setModel(new DefaultComboBoxModel((Config.inputDevices.toArray())));
        }
        else
        {
            cbName.setModel(new DefaultComboBoxModel((Config.outputDevices.toArray())));
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        cbEnable = new javax.swing.JComboBox<>();
        cbInput = new javax.swing.JComboBox<>();
        cbName = new javax.swing.JComboBox<>();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Device 1", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        cbEnable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Disable", "Enable" }));
        cbEnable.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cbEnableActionPerformed(evt);
            }
        });

        cbInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Input", "Output" }));
        cbInput.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cbInputActionPerformed(evt);
            }
        });

        cbName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Passive Infra-red Sensor", "Ultrassonic sensor" }));
        cbName.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cbNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cbEnable, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cbInput, 0, 362, Short.MAX_VALUE)
            .addComponent(cbName, 0, 362, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cbEnable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbInput)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbName))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbEnableActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbEnableActionPerformed
    {//GEN-HEADEREND:event_cbEnableActionPerformed
        setNextOthersComboBoxEnable(String.valueOf(cbEnable.getSelectedItem()).equalsIgnoreCase(enable));
        updateCbNames();
        updateDevice(String.valueOf(cbEnable.getSelectedItem()).equalsIgnoreCase(enable));
    }//GEN-LAST:event_cbEnableActionPerformed

    private void cbInputActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbInputActionPerformed
    {//GEN-HEADEREND:event_cbInputActionPerformed
        updateCbNames();
        updateDevice(true);
    }//GEN-LAST:event_cbInputActionPerformed

    private void cbNameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbNameActionPerformed
    {//GEN-HEADEREND:event_cbNameActionPerformed
        updateDevice(true);
    }//GEN-LAST:event_cbNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbEnable;
    private javax.swing.JComboBox<String> cbInput;
    private javax.swing.JComboBox<String> cbName;
    // End of variables declaration//GEN-END:variables
}
